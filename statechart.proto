package statechart;


message content {
    optional string string = 1;
    optional expression expression = 2;
    optional document document = 3;
}

message document {
    optional string name = 1;
    repeated state states = 2;
    repeated transition transitions = 3;
}

enum expression_type {
    block = 1;
    null = 2;
    list = 3;
    map = 4;
    bool = 5;
    int = 6;
    float = 7;
    string = 8;
    raise = 9;
    case = 10;
    clause = 11;
    foreach = 12;
    log = 13;
    assign = 14;
    send = 15;
    cancel = 16;
    equal = 17;
    not_equal = 18;
}

message expression {
    required expression_type type = 1;
    optional bool bool_val = 2;
    optional sint32 int_val = 3;
    optional double float_val = 4;
    optional string string_val = 5;
    repeated expression args = 6;
}

message invoke {
    optional expression type = 1;
    optional expression src = 2;
    optional expression id = 3;
    optional bool autoforward = 4 [default = false];
    repeated param params = 5;
    optional content content = 6;
    repeated expression on_exit = 7;
}

message param {
    required string id = 1;
    optional expression expression = 2;
}

enum state_type {
    compound = 1;
    atomic = 2;
    parallel = 3;
    history_shallow = 4;
    history_deep = 5;
    initial = 6;
    final = 7;
}

message state {
    optional state_type type = 1 [default = compound];
    required uint32 idx = 2;
    optional string id = 3;
    repeated expression on_enter = 4;
    repeated expression on_exit = 5;
    repeated invoke invocations = 6;
    repeated expression data = 7;
    optional expression donedata = 8;
    required uint32 parent = 9;
    repeated uint32 children = 10;
    repeated uint32 ancestors = 11;
    repeated uint32 completion = 12;
    repeated uint32 transitions = 13;
}

enum transition_type {
    targetless = 1;
    internal = 2;
    spontaneous = 3;
    history = 4;
    initial = 5;
}

message transition {
    optional transition_type type = 1 [default = targetless];
    required uint32 idx = 2;
    required uint32 source = 3;
    repeated string events = 4;
    optional expression condition = 5;
    repeated expression on_transition = 6;
    repeated uint32 targets = 7;
    repeated uint32 conflicts = 8;
    repeated uint32 exits = 9;
}

