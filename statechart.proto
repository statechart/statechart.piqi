syntax = "proto2";
package statechart;


message content {
    optional string string = 1;
    optional expression expression = 2;
    optional document document = 3;
}

message document {
    optional string name = 1;
    repeated state states = 2;
    repeated transition transitions = 3;
}

message expression {
    enum expression_type {
        block = 1;
        null = 2;
        list = 3;
        map = 4;
        bool = 5;
        int = 6;
        float = 7;
        string = 8;
        raise = 9;
        case = 10;
        clause = 11;
        foreach = 12;
        log = 13;
        assign = 14;
        send = 15;
        cancel = 16;
        equal = 17;
        not_equal = 18;
    }
    required expression_type type = 1;
    optional bool bool_val = 2;
    optional sint32 int_val = 3;
    optional double float_val = 4;
    optional string string_val = 5;
    repeated expression args = 6;
}

message invoke {
    optional expression type = 1;
    optional expression src = 2;
    optional expression id = 3;
    optional bool autoforward = 4 [default = false];
    repeated param params = 5;
    optional content content = 6;
    repeated expression on_exit = 7;
}

message param {
    required string id = 1;
    optional expression expression = 2;
}

message state {
    enum state_type {
        compound = 1;
        atomic = 2;
        parallel = 3;
        history_shallow = 4;
        history_deep = 5;
        initial = 6;
        final = 7;
    }
    optional state_type type = 1 [default = compound];
    required uint32 idx = 2;
    optional string id = 3;
    repeated expression on_enter = 4;
    repeated expression on_exit = 5;
    repeated invoke invocations = 6;
    repeated expression data = 7;
    optional expression donedata = 8;
    required uint32 parent = 9;
    required bytes children = 10;
    required bytes ancestors = 11;
    required bytes completion = 12;
    required bytes transitions = 13;
    optional bool has_history = 14 [default = false];
}

message transition {
    enum transition_type {
        external = 1;
        targetless = 2;
        internal = 3;
        spontaneous = 4;
        history = 5;
        initial = 6;
    }
    optional transition_type type = 1 [default = targetless];
    required uint32 idx = 2;
    required uint32 source = 3;
    repeated string events = 4;
    optional expression condition = 5;
    repeated expression on_transition = 6;
    required bytes targets = 7;
    required bytes conflicts = 8;
    required bytes exits = 9;
}
